server {
    # Listen on port 80 (standard HTTP port)
    listen 80;
    server_name localhost;

    # Root directory where files are located
    root /usr/share/nginx/html;
    
    # Default file to serve when visiting /
    index index.html;

    # GZIP Compression: Makes files smaller before sending to browser
    # Results in faster page loads
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Security Headers: Protect against common web attacks
    add_header X-Frame-Options "SAMEORIGIN" always;           # Prevents clickjacking
    add_header X-Content-Type-Options "nosniff" always;       # Prevents MIME sniffing
    add_header X-XSS-Protection "1; mode=block" always;       # XSS protection

    # LOCATION BLOCK 1: Serve static files
    location / {
        # Try to serve the requested file
        # If not found, try as directory
        # If still not found, serve index.html (for single-page apps)
        try_files $uri $uri/ /index.html;
        
        # Cache static files for 1 hour
        expires 1h;
        add_header Cache-Control "public, immutable";
    }

    # LOCATION BLOCK 2: API Proxy
    # Any request to /api/* gets forwarded to backend container
    location /api/ {
        # Forward to backend service (Docker resolves 'backend' to the container)
        proxy_pass http://backend:5000;
        
        # HTTP/1.1 for better compatibility
        proxy_http_version 1.1;
        
        # WebSocket support (if needed)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        
        # Preserve original request headers
        proxy_set_header Host $host;                          # Original host
        proxy_set_header X-Real-IP $remote_addr;              # Client's real IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Proxy chain
        proxy_set_header X-Forwarded-Proto $scheme;           # http or https
        
        # Don't cache API responses
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts: ML processing can take time
        proxy_connect_timeout 60s;   # Time to connect to backend
        proxy_send_timeout 60s;      # Time to send request
        proxy_read_timeout 60s;      # Time to read response
    }

    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
}